#!/usr/bin/env python3
""" Main interface """

import sys
from random import randint

from src.twitter_bot import TwitterBot
from src.wiki_scraper import WikiScraper
from src.sentence import Sentence
from src.chain import Chain

HELP_STRING = ("Tweets sentences generated by markov chains,\n"
               "using minervawikin.nu as learning material.\n\n"
               "Usage: sapp_bot <command> [flag]... [argument]...\n\n"
               "Commands:\n"
               "  help                          Print this helpful information.\n"
               "  run                           Run the bot.\n"
               "  print  [count] [first_word]   Print generated sentences *count* times (default 1).\n"
               "  update [recent|all]           Update all or recent corpus pages (default recent).\n\n"
               "Flags:\n"
               "  --debug:               Print debug information during execution of given command.\n"
              )

USAGE = "Usage: sapp_bot <command> [flag]... [argument]..."

VERSION = "0.9.0"

def main():
    """Main function"""
    args = sys.argv[1:]

    if len(args) == 0:
        print("Please select a command.")
        sys.exit(1)

    cmd = args[0]
    args = args[1:]

    # Find possible flags, add them to flag list and remaining to args.
    input_flags = list()
    flag_count = 0
    for i in range(len(args)):
        if args[i].startswith('--'):
            flag_count += 1

    input_flags = args[0:flag_count]
    args = args[flag_count:]

    # Recognized flags with default values
    program_flags = {
        "--debug": False
    }

    # Set program flags from input flags
    for flag in input_flags:
        if flag in program_flags:
            program_flags[flag] = True
        else:
            print('Unrecognized flag \'', flag, '\'.')
            sys.exit(1)


    if cmd == 'help':
        print(HELP_STRING)

    elif cmd == 'print':
        count = 1
        first_word = None

        if len(args) >= 1:
            if args[0].isdigit():
                count = args[0]
            else:
                print("Print count must be integer!")
                print(USAGE)
                sys.exit(1)

        if len(args) >= 2:
            first_word = args[1]

        # TODO: seond option = first_word
        chain = Chain('corpus', program_flags['--debug'])
        chain.build_model()

        for _ in range(int(count)):
            try:
                max_chars = randint(230, 270)
                if program_flags['--debug']:
                    print("Generating tweet of", max_chars, "characters...")
                sentence = Sentence(chain, max_chars)
                sentence.generate(first_word)
                print(str(sentence), end='')
                if program_flags['--debug']:
                    print("(" + str(len(str(sentence))) + ")\n")
                else:
                    print("")
                print("\n")
            except Exception as e:
                print("Error:", str(e))

    elif cmd == 'update':
        all = False
        if len(args) == 1:
            if args[0] == 'all':
                all = True

        ws = WikiScraper()
        if all:
            ws.update_all_pages()
        else:
            ws.update_recent_changes()

    elif cmd == 'run':
        bot = TwitterBot("bot_config.json")
        bot.run()

    else:
        print("Invalid command: " + cmd)
        print(USAGE)
        sys.exit(1)

    sys.exit(0)

if __name__ == "__main__":
    main()
